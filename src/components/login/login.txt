import React, { useState } from "react";
import "./Login.css";
// import { Link } from "react-router-dom";
import { useDispatch } from "react-redux";
import { signin } from "../../redux-login/userSlice";
function Login() {
  const [formData, setFormData] = useState({
    email: "",
    password: "",
  });
  const [errors, setErrors] = useState({
    email: "",
    password: "",
  });
  const dispatch = useDispatch();
  const handleChange = (event) => {
    const { name, value } = event.target;
    setFormData((prevFormData) => ({
      ...prevFormData,
      [name]: value,
    }));

    // const handleInput = (event) => {
    //     const name = event.target.name;
    //     const value = event.target.value;

    //     setInput((Input) => ({ ...Input, [name]: value }));
    //   };
  };
  const handleError = (event) => {
    const name = event.target.name;
    const value = event.target.value;

    if (name === "password") {
      if (value.length < 10) {
        // || value.length > 10
        setErrors((prevErrors) => ({
          ...prevErrors,
          [name]: "Password should be of 10 characters",
        }));
      } else if (value.includes("_")) {
        setErrors((prevErrors) => ({
          ...prevErrors,
          [name]: "You cannot use an underscore",
        }));
      } else {
        setErrors((prevErrors) => ({ ...prevErrors, [name]: "" }));
      }
    }

    if (name === "email") {
      if (!value.includes("@")) {
        setErrors((prevErrors) => ({
          ...prevErrors,
          [name]: "Email must contain '@'",
        }));
      } else {
        setErrors((prevErrors) => ({ ...prevErrors, [name]: "" }));
      }
    }
  };
  const handleSubmit = (e) => {
    e.preventDefault;
    dispatch(
      signin({
        email: formData.email,
        password: formData.password,
        signedIn: true,
      })
    );
  };

  return (
    <>
      <form onSubmit={(e) => handleSubmit(e)}>
        <h2>Login form</h2>
        <div className="email">
          <label htmlFor="email">Email</label>
          <br></br>
          <input
            type="text"
            name="email"
            placeholder=" Enter email"
            value={formData.email}
            onBlur={handleError}
            onChange={handleChange}
          />
          <p className="error">{errors.email}</p>
        </div>
        <br />
        <div
          className="password
        "
        >
          <label htmlFor="password">Password</label>
          <br />
          <input
            type="password"
            placeholder="********"
            name="password"
            value={formData.password}
            onBlur={handleError}
            onChange={handleChange}
          />
          <p className="error">{errors.password}</p>
        </div>

        <button type="submit">Sign in</button>
      </form>
    </>
  );
}

export default Login;




  const navigate = useNavigate();

  const isEmailValid = (email) => {
    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
    return emailPattern.test(email);
  };

  const handleEmailBlur = () => {
    if (!isEmailValid(email)) {
      setEmailError("Invalid email format.");
    } else if (!email) {
      setEmailError("Email is Required");
    } else {
      setEmailError("");
    }
  };

  const handlePasswordBlur = () => {
    if (password.length < 8) {
      setPasswordError("Password must be at least eight characters.");
    } else {
      setPasswordError("");
    }
  };

  const handleChange = (event) => {
    const { name, value } = event.target;
    setFormData((prevFormData) => ({
      ...prevFormData,
      [name]: value,
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setEmailError("");
    setPasswordError("");

    if (!isEmailValid(email)) {
      setEmailError("Invalid email format.");
      return;
    }

    if (password.length < 8) {
      setPasswordError("Password must be at least eight characters.");
      return;
    }

    if (
      formData.email === "john@gmail.com" &&
      formData.password === "changeme"
    ) {
    }
  };





  // import React, { useState } from "react";
// import "./Login.css";
// import { useNavigate } from "react-router-dom";

// function Login() {
//   const [formData, setFormData] = useState({
//     email: "",
//     password: "",
//   });

//   const [emailError, setEmailError] = useState("");
//   const [passwordError, setPasswordError] = useState("");
//   const navigate = useNavigate();

//   const handleEmail = (e) => {
//     setFormData({ ...formData, email: e.target.value });
//   };

//   const handlePassword = (e) => {
//     setFormData({ ...formData, password: e.target.value });
//   };

//   const handleEmailBlur = () => {
//     if (!formData.email.trim()) {
//       setEmailError("Email is required");
//     } else {
//       setEmailError("");
//     }
//   };

//   const handlePasswordBlur = () => {
//     if (!formData.password.trim()) {
//       setPasswordError("Password is required");
//     } else {
//       setPasswordError("");
//     }
//   };

//   const handleSubmit = (e) => {
//     e.preventDefault();

//     if (
//       formData.email === "john@gmail.com" &&
//       formData.password === "changeme"
//     ) {

//       navigate("/");
//     } else {
//       if (
//         formData.email !== "john@gmail.com" ||
//         formData.password !== "changeme"
//       ) {
//         setEmailError("Enter correct email");
//         setPasswordError("Check your password again");
//         navigate("/login");
//       }
//     }
//   };

//   return (
//     <>
//       <form onSubmit={handleSubmit}>
//         <h2>Login form</h2>
//         <div className="email">
//           <label htmlFor="email">Email</label>
//           <br />
//           <input
//             type="text"
//             name="email"
//             placeholder="Enter email"
//             value={formData.email}
//             onChange={handleEmail}
//             onBlur={handleEmailBlur}
//           />
//           {emailError && <p className="error">{emailError}</p>}
//         </div>
//         <br />
//         <div className="password">
//           <label htmlFor="password">Password</label>
//           <br />
//           <input
//             type="password"
//             placeholder="********"
//             name="password"
//             value={formData.password}
//             onChange={handlePassword}
//             onBlur={handlePasswordBlur}
//           />
//           {passwordError && <p className="error">{passwordError}</p>}
//         </div>

//         <button type="submit">Sign in</button>
//       </form>
//     </>
//   );
// }

// export default Login;